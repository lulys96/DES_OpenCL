__kernel void action$98(__global bool * input1$FIFO$ptr , __global bool * input2$FIFO$ptr , __global bool * output$FIFO$ptr) {
	int input1$FIFO$index = get_global_id(0)* 32;
	int input2$FIFO$index = get_global_id(0)* 32;
	int output$FIFO$index = get_global_id(0)* 32;
	bool IN1[32];
	for(int i = 0 ; i < 32 ; i++ ) {
		IN1[i]= input1$FIFO$ptr[input1$FIFO$index++];
	}
	bool IN2[32];
	for(int i = 0 ; i < 32 ; i++ ) {
		IN2[i]= input2$FIFO$ptr[input2$FIFO$index++];
	}
	bool OUT1[32];
	OUT1[0]=((IN1[0]&&(! IN2[0]))||((! IN1[0])&& IN2[0]));
	OUT1[1]=((IN1[1]&&(! IN2[1]))||((! IN1[1])&& IN2[1]));
	OUT1[2]=((IN1[2]&&(! IN2[2]))||((! IN1[2])&& IN2[2]));
	OUT1[3]=((IN1[3]&&(! IN2[3]))||((! IN1[3])&& IN2[3]));
	OUT1[4]=((IN1[4]&&(! IN2[4]))||((! IN1[4])&& IN2[4]));
	OUT1[5]=((IN1[5]&&(! IN2[5]))||((! IN1[5])&& IN2[5]));
	OUT1[6]=((IN1[6]&&(! IN2[6]))||((! IN1[6])&& IN2[6]));
	OUT1[7]=((IN1[7]&&(! IN2[7]))||((! IN1[7])&& IN2[7]));
	OUT1[8]=((IN1[8]&&(! IN2[8]))||((! IN1[8])&& IN2[8]));
	OUT1[9]=((IN1[9]&&(! IN2[9]))||((! IN1[9])&& IN2[9]));
	OUT1[10]=((IN1[10]&&(! IN2[10]))||((! IN1[10])&& IN2[10]));
	OUT1[11]=((IN1[11]&&(! IN2[11]))||((! IN1[11])&& IN2[11]));
	OUT1[12]=((IN1[12]&&(! IN2[12]))||((! IN1[12])&& IN2[12]));
	OUT1[13]=((IN1[13]&&(! IN2[13]))||((! IN1[13])&& IN2[13]));
	OUT1[14]=((IN1[14]&&(! IN2[14]))||((! IN1[14])&& IN2[14]));
	OUT1[15]=((IN1[15]&&(! IN2[15]))||((! IN1[15])&& IN2[15]));
	OUT1[16]=((IN1[16]&&(! IN2[16]))||((! IN1[16])&& IN2[16]));
	OUT1[17]=((IN1[17]&&(! IN2[17]))||((! IN1[17])&& IN2[17]));
	OUT1[18]=((IN1[18]&&(! IN2[18]))||((! IN1[18])&& IN2[18]));
	OUT1[19]=((IN1[19]&&(! IN2[19]))||((! IN1[19])&& IN2[19]));
	OUT1[20]=((IN1[20]&&(! IN2[20]))||((! IN1[20])&& IN2[20]));
	OUT1[21]=((IN1[21]&&(! IN2[21]))||((! IN1[21])&& IN2[21]));
	OUT1[22]=((IN1[22]&&(! IN2[22]))||((! IN1[22])&& IN2[22]));
	OUT1[23]=((IN1[23]&&(! IN2[23]))||((! IN1[23])&& IN2[23]));
	OUT1[24]=((IN1[24]&&(! IN2[24]))||((! IN1[24])&& IN2[24]));
	OUT1[25]=((IN1[25]&&(! IN2[25]))||((! IN1[25])&& IN2[25]));
	OUT1[26]=((IN1[26]&&(! IN2[26]))||((! IN1[26])&& IN2[26]));
	OUT1[27]=((IN1[27]&&(! IN2[27]))||((! IN1[27])&& IN2[27]));
	OUT1[28]=((IN1[28]&&(! IN2[28]))||((! IN1[28])&& IN2[28]));
	OUT1[29]=((IN1[29]&&(! IN2[29]))||((! IN1[29])&& IN2[29]));
	OUT1[30]=((IN1[30]&&(! IN2[30]))||((! IN1[30])&& IN2[30]));
	OUT1[31]=((IN1[31]&&(! IN2[31]))||((! IN1[31])&& IN2[31]));
	for(int i = 0 ; i < 32 ; i++ ) {
		output$FIFO$ptr[output$FIFO$index++]= OUT1[i];
	}
 }
