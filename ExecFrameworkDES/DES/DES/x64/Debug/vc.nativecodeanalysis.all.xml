<?xml version="1.0" encoding="utf-8"?><DEFECTS><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
      <FILENAME>Port.hpp</FILENAME>
      <LINE>36</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Port&lt;bool,100000&gt;::write_buffer' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Port&lt;bool,100000&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Port@_N$0BIGKA@@@QEAA@V?$initializer_list@V?$reference_wrapper@V?$FIFO@_N$0BIGKA@@@@std@@@std@@@Z</DECORATED>
    <FUNCLINE>36</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Port&lt;bool,100000&gt;::write_buffer</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
      <FILENAME>Port.hpp</FILENAME>
      <LINE>88</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6284</DEFECTCODE>
    <DESCRIPTION>Object passed as _Param_(2) when a string is required in call to 'printf' Actual type: 'class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;'.</DESCRIPTION>
    <FUNCTION>Port&lt;bool,100000&gt;::get_read_buffer</FUNCTION>
    <DECORATED>?get_read_buffer@?$Port@_N$0BIGKA@@@QEAAPEAPEAU_cl_mem@@HAEAUopencl_arguments@@@Z</DECORATED>
    <FUNCLINE>83</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
      <FILENAME>Port.hpp</FILENAME>
      <LINE>94</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6284</DEFECTCODE>
    <DESCRIPTION>Object passed as _Param_(2) when a string is required in call to 'printf' Actual type: 'class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;'.</DESCRIPTION>
    <FUNCTION>Port&lt;bool,100000&gt;::get_read_buffer</FUNCTION>
    <DECORATED>?get_read_buffer@?$Port@_N$0BIGKA@@@QEAAPEAPEAU_cl_mem@@HAEAUopencl_arguments@@@Z</DECORATED>
    <FUNCLINE>83</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
      <FILENAME>Port.hpp</FILENAME>
      <LINE>100</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6284</DEFECTCODE>
    <DESCRIPTION>Object passed as _Param_(2) when a string is required in call to 'printf' Actual type: 'class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;'.</DESCRIPTION>
    <FUNCTION>Port&lt;bool,100000&gt;::get_read_buffer</FUNCTION>
    <DECORATED>?get_read_buffer@?$Port@_N$0BIGKA@@@QEAAPEAPEAU_cl_mem@@HAEAUopencl_arguments@@@Z</DECORATED>
    <FUNCLINE>83</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
      <FILENAME>Port.hpp</FILENAME>
      <LINE>117</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6284</DEFECTCODE>
    <DESCRIPTION>Object passed as _Param_(2) when a string is required in call to 'printf' Actual type: 'class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;'.</DESCRIPTION>
    <FUNCTION>Port&lt;bool,100000&gt;::get_read_buffer</FUNCTION>
    <DECORATED>?get_read_buffer@?$Port@_N$0BIGKA@@@QEAAPEAPEAU_cl_mem@@HAEAUopencl_arguments@@@Z</DECORATED>
    <FUNCLINE>83</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
      <FILENAME>Port.hpp</FILENAME>
      <LINE>129</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6284</DEFECTCODE>
    <DESCRIPTION>Object passed as _Param_(2) when a string is required in call to 'printf' Actual type: 'class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;'.</DESCRIPTION>
    <FUNCTION>Port&lt;bool,100000&gt;::get_write_buffer</FUNCTION>
    <DECORATED>?get_write_buffer@?$Port@_N$0BIGKA@@@QEAAPEAPEAU_cl_mem@@HAEAUopencl_arguments@@@Z</DECORATED>
    <FUNCLINE>124</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
      <FILENAME>Port.hpp</FILENAME>
      <LINE>143</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6284</DEFECTCODE>
    <DESCRIPTION>Object passed as _Param_(2) when a string is required in call to 'printf' Actual type: 'class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;'.</DESCRIPTION>
    <FUNCTION>Port&lt;bool,100000&gt;::opencl_read_done</FUNCTION>
    <DECORATED>?opencl_read_done@?$Port@_N$0BIGKA@@@QEAAXXZ</DECORATED>
    <FUNCLINE>137</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
      <FILENAME>Port.hpp</FILENAME>
      <LINE>156</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6284</DEFECTCODE>
    <DESCRIPTION>Object passed as _Param_(2) when a string is required in call to 'printf' Actual type: 'class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;'.</DESCRIPTION>
    <FUNCTION>Port&lt;bool,100000&gt;::opencl_write_done</FUNCTION>
    <DECORATED>?opencl_write_done@?$Port@_N$0BIGKA@@@QEAAXAEAUopencl_arguments@@@Z</DECORATED>
    <FUNCLINE>150</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
      <FILENAME>Port.hpp</FILENAME>
      <LINE>162</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6284</DEFECTCODE>
    <DESCRIPTION>Object passed as _Param_(2) when a string is required in call to 'printf' Actual type: 'class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;'.</DESCRIPTION>
    <FUNCTION>Port&lt;bool,100000&gt;::opencl_write_done</FUNCTION>
    <DECORATED>?opencl_write_done@?$Port@_N$0BIGKA@@@QEAAXAEAUopencl_arguments@@@Z</DECORATED>
    <FUNCLINE>150</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
      <FILENAME>Port.hpp</FILENAME>
      <LINE>179</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6284</DEFECTCODE>
    <DESCRIPTION>Object passed as _Param_(2) when a string is required in call to 'printf' Actual type: 'class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;'.</DESCRIPTION>
    <FUNCTION>Port&lt;bool,100000&gt;::opencl_write_done</FUNCTION>
    <DECORATED>?opencl_write_done@?$Port@_N$0BIGKA@@@QEAAXAEAUopencl_arguments@@@Z</DECORATED>
    <FUNCLINE>150</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
      <FILENAME>opencl_arguments.cpp</FILENAME>
      <LINE>5</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'opencl_arguments::globalWorkSize' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>opencl_arguments::{ctor}</FUNCTION>
    <DECORATED>??0opencl_arguments@@QEAA@XZ</DECORATED>
    <FUNCLINE>5</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>opencl_arguments::globalWorkSize</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
      <FILENAME>utils.cpp</FILENAME>
      <LINE>70</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>6054</DEFECTCODE>
    <DESCRIPTION>String 'platformName' might not be zero-terminated.</DESCRIPTION>
    <FUNCTION>FindOpenCLPlatform</FUNCTION>
    <DECORATED>?FindOpenCLPlatform@@YAPEAU_cl_platform_id@@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>3</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
        <FILENAME>utils.cpp</FILENAME>
        <LINE>30</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
        <FILENAME>utils.cpp</FILENAME>
        <LINE>31</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
        <FILENAME>utils.cpp</FILENAME>
        <LINE>32</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
        <FILENAME>utils.cpp</FILENAME>
        <LINE>33</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
        <FILENAME>utils.cpp</FILENAME>
        <LINE>37</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
        <FILENAME>utils.cpp</FILENAME>
        <LINE>41</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
        <FILENAME>utils.cpp</FILENAME>
        <LINE>42</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
        <FILENAME>utils.cpp</FILENAME>
        <LINE>43</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
        <FILENAME>utils.cpp</FILENAME>
        <LINE>48</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
        <FILENAME>utils.cpp</FILENAME>
        <LINE>48</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
        <FILENAME>utils.cpp</FILENAME>
        <LINE>49</LINE>
        <COLUMN>7</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>This expression may not zero-terminate 'platformName'</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
        <FILENAME>utils.cpp</FILENAME>
        <LINE>50</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
        <FILENAME>utils.cpp</FILENAME>
        <LINE>51</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
        <FILENAME>utils.cpp</FILENAME>
        <LINE>52</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
        <FILENAME>utils.cpp</FILENAME>
        <LINE>54</LINE>
        <COLUMN>12</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'platformName' is an Output from 'clGetPlatformInfo' (declared at c:\program files (x86)\intelswtools\system_studio_2020\opencl\sdk\include\cl\cl.h:858)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
        <FILENAME>utils.cpp</FILENAME>
        <LINE>55</LINE>
        <COLUMN>16</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'errorCode!=0' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
        <FILENAME>utils.cpp</FILENAME>
        <LINE>61</LINE>
        <COLUMN>21</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
        <FILENAME>utils.cpp</FILENAME>
        <LINE>62</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
        <FILENAME>utils.cpp</FILENAME>
        <LINE>63</LINE>
        <COLUMN>17</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'errorCode!=0' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
        <FILENAME>utils.cpp</FILENAME>
        <LINE>70</LINE>
        <COLUMN>52</COLUMN>
        <KEYEVENT>
          <ID>5</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'platformName' is an Input to 'strstr' (declared at c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\string.h:522)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
        <FILENAME>utils.cpp</FILENAME>
        <LINE>70</LINE>
        <COLUMN>52</COLUMN>
        <KEYEVENT>
          <ID>6</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'platformName' is required to be zero-terminated by a SAL annotation on 'strstr'</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
      <FILENAME>utils.cpp</FILENAME>
      <LINE>84</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26816</DEFECTCODE>
    <DESCRIPTION>The pointer points to memory allocated on the stack.</DESCRIPTION>
    <FUNCTION>FindOpenCLPlatform</FUNCTION>
    <DECORATED>?FindOpenCLPlatform@@YAPEAU_cl_platform_id@@_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
      <FILENAME>utils.cpp</FILENAME>
      <LINE>331</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>6284</DEFECTCODE>
    <DESCRIPTION>Object passed as _Param_(2) when a string is required in call to 'printf' Actual type: 'class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;'.</DESCRIPTION>
    <FUNCTION>printClDevices</FUNCTION>
    <DECORATED>?printClDevices@@YA_NXZ</DECORATED>
    <FUNCLINE>249</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
      <FILENAME>utils.cpp</FILENAME>
      <LINE>387</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>6273</DEFECTCODE>
    <DESCRIPTION>Non-integer passed as _Param_(2) when an integer is required in call to 'printf' Actual type: 'struct _cl_device_id *':  if a pointer value is being passed, %p should be used.</DESCRIPTION>
    <FUNCTION>printDeviceInformation</FUNCTION>
    <DECORATED>?printDeviceInformation@@YA_NPEAU_cl_device_id@@@Z</DECORATED>
    <FUNCLINE>386</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
      <FILENAME>utils.cpp</FILENAME>
      <LINE>434</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>6011</DEFECTCODE>
    <DESCRIPTION>Dereferencing NULL pointer 'deviceid'. </DESCRIPTION>
    <FUNCTION>SetupOpenCLByDeviceID</FUNCTION>
    <DECORATED>?SetupOpenCLByDeviceID@@YAHPEAUopencl_arguments@@PEAU_cl_device_id@@@Z</DECORATED>
    <FUNCLINE>431</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
        <FILENAME>utils.cpp</FILENAME>
        <LINE>432</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
        <FILENAME>utils.cpp</FILENAME>
        <LINE>433</LINE>
        <COLUMN>14</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'deviceid' may be NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
        <FILENAME>utils.cpp</FILENAME>
        <LINE>434</LINE>
        <COLUMN>11</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'deviceid' is dereferenced, but may still be NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\luiza\source\repos\DES\DesOutput\</FILEPATH>
      <FILENAME>utils.cpp</FILENAME>
      <LINE>519</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26816</DEFECTCODE>
    <DESCRIPTION>The pointer points to memory allocated on the stack.</DESCRIPTION>
    <FUNCTION>findDeviceID</FUNCTION>
    <DECORATED>?findDeviceID@@YAPEAU_cl_device_id@@H@Z</DECORATED>
    <FUNCLINE>476</FUNCLINE>
    <PATH></PATH>
  </DEFECT></DEFECTS>